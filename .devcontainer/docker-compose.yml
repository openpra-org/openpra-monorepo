volumes:
  mongo_data:
  rabbitmq_data:

networks:
  app_net:

services:
  frontend:
    <<: *base-image
    ports:
      - "4200:4200"
    networks:
      - app_net
    command: "nx run --verbose frontend-web-editor:serve:development"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/"]
      <<: *healthcheck-fragments

  job-broker:
    <<: *base-image
    ports:
      - "3000:3000"
    command: "nx run --verbose microservice-job-broker:serve:development"
    networks:
      - app_net
    depends_on:
      - mongodb
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/q/job-types"]
      <<: *healthcheck-fragments

  job-worker:
    <<: *base-image
    command: "nx run --verbose microservice-job-broker:serve-consumer:development"
    networks:
      - app_net
    depends_on:
      - mongodb
      - rabbitmq
    deploy:
      replicas: 2

  backend:
    <<: *base-image
    ports:
      - "8000:8000"
    command: "nx run --verbose web-backend:serve:development"
    depends_on:
      - mongodb
    networks:
      - app_net
    secrets:
      - JWT_SECRET
    environment:
      JWT_SECRET_KEY_FILE: /run/secrets/JWT_SECRET
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      <<: *healthcheck-fragments

  rabbitmq:
    image: rabbitmq:management-alpine
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_net
    ports:
      - "5672:5672"
      - "15672:15672"
    configs:
      - source: rabbitmq_plugins
        target: /etc/rabbitmq/enabled_plugins
      - source: rabbitmq_conf
        target: /etc/rabbitmq/rabbitmq.conf

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - app_net
    volumes:
      - mongo_data:/data/db
      