name: "CI: Monorepo â€” Build, Lint, Test"

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    strategy:
      matrix:
        package:
          - frontend-web-editor
          - web-backend
          - shared-types
          - shared-sdk
          - model-generator
          - engine-scram-node
          - mef-schema
          - mef-types
          - microservice-job-broker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            make \
            cmake \
            g++ \
            git \
            python3 \
            curl \
            ca-certificates \
            libxml2-dev \
            libomp-dev \
            libgoogle-perftools-dev \
            libboost-program-options-dev \
            libboost-math-dev \
            libboost-random-dev \
            libboost-filesystem-dev \
            libboost-test-dev \
            libboost-date-time-dev \
            libjemalloc-dev \
            libxml2 \
            libboost-filesystem1.74.0 \
            libboost-program-options1.74.0 \
            libtcmalloc-minimal4 \
            libjemalloc2

      - name: Install pnpm
        run: npm install -g pnpm@8

      - name: Install dependencies
        run: pnpm install --ignore-scripts

      - name: Build scram-node
        run: cd packages/engine/scram-node && pnpm run install

      - name: Build
        run: pnpm nx run ${{ matrix.package }}:build --verbose

      - name: Wait for MongoDB service
        env:
          MONGO_URI: mongodb://localhost:27017/test
        run: |
          set -e
          for i in $(seq 1 60); do
            if mongosh --quiet --eval 'db.adminCommand("ping")' --host localhost --port 27017 >/dev/null 2>&1; then
              echo "MongoDB is ready"; break; fi; sleep 2; done

      - name: Lint
        run: pnpm nx run ${{ matrix.package }}:lint --verbose

      - name: Test
        env:
          MONGO_URI: mongodb://localhost:27017/test
        run: pnpm nx run ${{ matrix.package }}:test -- --test-timeout=60000 --verbose

      - name: E2E Tests
        if: |
          matrix.package == 'frontend-web-editor' ||
          matrix.package == 'web-backend' ||
          matrix.package == 'microservice-job-broker'
        continue-on-error: true
        env:
          MONGO_URI: mongodb://localhost:27017/test
        run: pnpm nx run ${{ matrix.package }}:e2e
