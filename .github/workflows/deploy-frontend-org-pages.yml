name: "Deploy: Frontend â€” Org Pages (root & previews)"

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

permissions:
  contents: read

env:
  OWNER: ${{ github.repository_owner }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm@8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Build frontend (production)
        env:
          RAW_BRANCH: ${{ github.ref_name }}
          NODE_ENV: production
        run: |
          BRANCH_SLUG="${RAW_BRANCH//\//-}"
          export BRANCH_SLUG
          pnpm nx run frontend-web-editor:build:production

      - name: Prepare artifact for Org Pages
        id: prep
        run: |
          DIST_DIR="dist/packages/frontend/web-editor"
          BRANCH_SLUG="${{ github.ref_name }}"
          BRANCH_SLUG=${BRANCH_SLUG//\//-}
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            TARGET_SUBDIR="."
            BASE_PATH="/"
          else
            TARGET_SUBDIR="previews/${BRANCH_SLUG}"
            BASE_PATH="/previews/${BRANCH_SLUG}/"
          fi
          echo "subdir=$TARGET_SUBDIR" >> $GITHUB_OUTPUT
          echo "base_path=$BASE_PATH" >> $GITHUB_OUTPUT
          # Inject base href
          if grep -q '<base ' "$DIST_DIR/index.html"; then
            sed -i "s|<base href=\"/\"|<base href=\"${BASE_PATH}\"|" "$DIST_DIR/index.html" || true
          else
            sed -i "s|</head>|  <base href=\"${BASE_PATH}\" />\n</head>|" "$DIST_DIR/index.html" || true
          fi
          # SPA fallback
          cp "$DIST_DIR/index.html" "$DIST_DIR/404.html"

      - name: Checkout org pages repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.OWNER }}/${{ env.OWNER }}.github.io
          ref: main
          path: pages-repo
          token: ${{ secrets.ORG_PAGES_PAT }}

      - name: Copy build into org pages repo
        run: |
          mkdir -p "pages-repo/${{ steps.prep.outputs.subdir }}"
          rsync -a --delete "dist/packages/frontend/web-editor/" "pages-repo/${{ steps.prep.outputs.subdir }}/"

      - name: Commit and push to org pages repo
        run: |
          cd pages-repo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          MSG="Deploy ${GITHUB_REPOSITORY}@${GITHUB_SHA} to ${{ steps.prep.outputs.subdir }}"
          git commit -m "$MSG"
          git push origin HEAD:main
