name: monorepo-cd  # deployment
on:
push:
branches: [ main ]          # automatic deploys from main
workflow_dispatch:            # manual / customised deploy
inputs:
Host-Performance:
type: choice
options: [any, low, medium, high]
default: any
NumWorkers:
description: "min 2 – max 1024 (default 32)"
default: "32"
NumBrokers:
description: "min 2 – max 8 (default 3)"
default: "3"
NumBackends:
description: "min 2 – max 8 (default 3)"
default: "3"
NumFrontends:
description: "min 2 – max 8 (default 3)"
default: "3"

env:
REGISTRY: packages-space.openpra.org/p/openpra/containers
IMAGE_NAME: openpra-monorepo
REMOTE:     ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

jobs:
deploy:
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v3
# Fixed values because CD only runs from main
- name: Derive variables
  id: vars
  run: |
    echo "branch_slug=v2-app"            >> $GITHUB_OUTPUT
    echo "build_type=production"         >> $GITHUB_OUTPUT
    echo "num_workers=${{ inputs.NumWorkers || '32' }}"     >> $GITHUB_OUTPUT
    echo "num_brokers=${{ inputs.NumBrokers || '3' }}"     >> $GITHUB_OUTPUT
    echo "num_backends=${{ inputs.NumBackends || '3' }}"   >> $GITHUB_OUTPUT
    echo "num_frontends=${{ inputs.NumFrontends || '3' }}" >> $GITHUB_OUTPUT

- name: Log-in to registry
  uses: docker/login-action@v3
  with:
    registry: ${{ env.REGISTRY }}
    username: ${{ secrets.REGISTRY_USERNAME }}
    password: ${{ secrets.REGISTRY_PASSWORD }}

- name: Build & push deploy image
  env:
    BRANCH_SLUG: ${{ steps.vars.outputs.branch_slug }}
    BUILD_TYPE:  ${{ steps.vars.outputs.build_type }}
  shell: bash
  run: |
    docker pull "$REMOTE:deploy-$BRANCH_SLUG" || true

    docker build \
      --build-arg BUILD_TYPE=$BUILD_TYPE \
      --tag "$REMOTE:deploy-$BRANCH_SLUG" \
      -f docker/Dockerfile .

    docker push "$REMOTE:deploy-$BRANCH_SLUG"

# ── the next two steps assume you can SSH to a Swarm manager
- name: Add SSH key
  uses: webfactory/ssh-agent@v0.8.0
  with:
    ssh-private-key: ${{ secrets.SWARM_SSH_KEY }}

- name: Deploy stack to Swarm manager
  env:
    DOCKER_HOST: "ssh://swarm@${{ secrets.SWARM_MANAGER_HOST }}"
    STACK_YML: docker/stack.yml
    BRANCH_SLUG:    ${{ steps.vars.outputs.branch_slug }}
    NUM_WORKERS:    ${{ steps.vars.outputs.num_workers }}
    NUM_BROKERS:    ${{ steps.vars.outputs.num_brokers }}
    NUM_BACKENDS:   ${{ steps.vars.outputs.num_backends }}
    NUM_FRONTENDS:  ${{ steps.vars.outputs.num_frontends }}
    IMAGE_BACKEND:  $REMOTE:deploy-${{ steps.vars.outputs.branch_slug }}
    APP_DOMAIN:     ${{ secrets.APP_DOMAIN }}
    SHARED_PATH:    ${{ secrets.SHARED_VOLUME_PATH }}
    APP_JWT_SECRET: ${{ secrets.APP_JWT_SECRET_KEY }}
  shell: bash
  run: |
    export APP_NAME="v2-${BRANCH_SLUG}"
    export HOST_URL="${BRANCH_SLUG}.${APP_DOMAIN}"
    export ENV_SHARED_VOLUME_PATH="${SHARED_PATH}/openpra-app/v2/${BRANCH_SLUG}/volumes"

    # prepare shared folders + secret files locally (scp alternative)
    mkdir -p "$ENV_SHARED_VOLUME_PATH/mongodb" \
              "$ENV_SHARED_VOLUME_PATH/rabbitmq" docker/secrets
    echo "$APP_JWT_SECRET" > docker/secrets/DSF_JWT_SECRET

    # config + deploy
    docker -H "$DOCKER_HOST" compose -f "$STACK_YML" config
    docker -H "$DOCKER_HOST" stack deploy \
      -c "$STACK_YML" \
      --with-registry-auth \
      "$APP_NAME"