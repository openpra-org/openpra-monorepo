
networks:
  db_net:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true
  rmq_net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

secrets:
  CI_JWT_SECRET_KEY:
    file: secrets/DSF_JWT_SECRET_KEY.secret

configs:
  rabbitmq_plugins:
    file: configs/rabbitmq/enabled_plugins
  rabbitmq_conf:
    file: configs/rabbitmq/rabbitmq.conf


services:
  frontend:
    image: ${IMAGE_BACKEND}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    networks:
      - traefik-public
    command: "nx run --verbose frontend-web-editor:serve:development"
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-frontend-http.rule=Host(`${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-frontend-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-frontend-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-frontend-http.service=${APP_NAME}-frontend
        - traefik.http.routers.${APP_NAME}-frontend-https.rule=Host(`${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-frontend-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-frontend-https.tls=true
        - traefik.http.routers.${APP_NAME}-frontend-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-frontend-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-frontend-https.service=${APP_NAME}-frontend
        - traefik.http.services.${APP_NAME}-frontend.loadbalancer.server.port=4200

  job-broker:
    image: ${IMAGE_BACKEND}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    command: "nx run --verbose microservice-job-broker:serve:development"
    environment:
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    networks:
      - traefik-public
      - rmq_net
      - db_net
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-job-broker-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/q`)
        - traefik.http.routers.${APP_NAME}-job-broker-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-job-broker-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-job-broker-http.service=${APP_NAME}-job-broker
        - traefik.http.routers.${APP_NAME}-job-broker-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/q`)
        - traefik.http.routers.${APP_NAME}-job-broker-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-job-broker-https.tls=true
        - traefik.http.routers.${APP_NAME}-job-broker-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-job-broker-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-job-broker-https.service=${APP_NAME}-job-broker
        - traefik.http.services.${APP_NAME}-job-broker.loadbalancer.server.port=3000

  job-worker:
    image: ${IMAGE_BACKEND}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    command: "nx run --verbose microservice-job-broker:serve-consumer:development"
    environment:
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    networks:
      - rmq_net
    deploy:
      replicas: ${NUM_WORKERS}

  backend:
    image: ${IMAGE_BACKEND}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    networks:
      - traefik-public
      - db_net
    command: "nx run --verbose web-backend:serve:development"
    secrets:
      - CI_JWT_SECRET_KEY
    environment:
      MONGO_URL: mongodb://mongodb:27017
      JWT_SECRET_KEY: /run/secrets/CI_JWT_SECRET_KEY
      SENTRY_DSN: ${CI_SENTRY_DSN}
      SENTRY_ENV: ${CI_SENTRY_ENV}
      DEBUG: ${CI_DEBUG}
      DEPLOYMENT: 'true'
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-backend-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/api`)
        - traefik.http.routers.${APP_NAME}-backend-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-backend-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-backend-http.service=${APP_NAME}-backend
        - traefik.http.routers.${APP_NAME}-backend-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/api`)
        - traefik.http.routers.${APP_NAME}-backend-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-backend-https.tls=true
        - traefik.http.routers.${APP_NAME}-backend-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-backend-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-backend-https.service=${APP_NAME}-backend
        - traefik.http.services.${APP_NAME}-backend.loadbalancer.server.port=8000

  mongodb-express:
    image: mongo-express:latest
    networks:
      - traefik-public
      - db_net
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_SITE_BASEURL: /mongo/
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-express-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mongo`)
        - traefik.http.routers.${APP_NAME}-express-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-express-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-express-http.service=${APP_NAME}-express
        - traefik.http.routers.${APP_NAME}-express-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mongo`)
        - traefik.http.routers.${APP_NAME}-express-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-express-https.tls=true
        - traefik.http.routers.${APP_NAME}-express-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-express-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-express-https.service=${APP_NAME}-express
        - traefik.http.services.${APP_NAME}-express.loadbalancer.server.port=8081

  rabbitmq:
    image: rabbitmq:management-alpine
    volumes:
      - "$ENV_SHARED_VOLUME_PATH/rabbitmq:/var/lib/rabbitmq"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    networks:
      - traefik-public
      - rmq_net
    configs:
      - source: rabbitmq_plugins
        target: /etc/rabbitmq/enabled_plugins
      - source: rabbitmq_conf
        target: /etc/rabbitmq/rabbitmq.conf
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-rabbitmq-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mq`)
        - traefik.http.routers.${APP_NAME}-rabbitmq-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-rabbitmq-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-rabbitmq-http.service=${APP_NAME}-express
        - traefik.http.routers.${APP_NAME}-rabbitmq-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mq`)
        - traefik.http.routers.${APP_NAME}-rabbitmq-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-rabbitmq-https.tls=true
        - traefik.http.routers.${APP_NAME}-rabbitmq-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-rabbitmq-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-rabbitmq-https.service=${APP_NAME}-rabbitmq
        - traefik.http.services.${APP_NAME}-rabbitmq.loadbalancer.server.port=15672
  mongodb:
    image: mongo:latest
    networks:
      - db_net
    volumes:
      - "$ENV_SHARED_VOLUME_PATH/mongodb:/data/db"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
