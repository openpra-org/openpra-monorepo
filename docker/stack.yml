networks:
  db_net:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true
  rmq_net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

configs:
  rabbitmq_plugins:
    file: configs/rabbitmq/enabled_plugins
  rabbitmq_conf:
    file: configs/rabbitmq/rabbitmq.conf
  nestjs_env_vars:
    file: configs/deployment.env

x-base-shared-vols: &volumes-timezone
  volumes:
    - "/etc/localtime:/etc/localtime:ro"
    - "/etc/timezone:/etc/timezone:ro"

x-base-shared-confs: &shared-nestjs_conf
    configs:
      - source: nestjs_env_vars
        target: /data/project/.env
    <<: *volumes-timezone


x-base-healthcheck: &healthcheck-fragments
  interval: 10s
  timeout: 2s
  retries: 5
  start_period: 300s
  start_interval: 2s

secrets:
  CI_JWT_SECRET:
    file: secrets/DSF_JWT_SECRET

services:
  frontend:
    image: ${IMAGE_BACKEND}
    <<: *volumes-timezone
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/"]
      <<: *healthcheck-fragments
    networks:
      - traefik-public
    command: "nx run --verbose frontend-web-editor:serve-static:$CI_BUILD_TYPE"
    environment:
      NODE_ENV: ${CI_BUILD_TYPE}
      DEBUG: ${CI_DEBUG}
      ALLOWED_HOST: ${CI_ALLOWED_HOST}
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-frontend-http.rule=Host(`${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-frontend-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-frontend-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-frontend-http.service=${APP_NAME}-frontend
        - traefik.http.routers.${APP_NAME}-frontend-https.rule=Host(`${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-frontend-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-frontend-https.tls=true
        - traefik.http.routers.${APP_NAME}-frontend-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-frontend-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-frontend-https.service=${APP_NAME}-frontend
        - traefik.http.services.${APP_NAME}-frontend.loadbalancer.server.port=4200

  job-broker:
    image: ${IMAGE_BACKEND}
    <<: *shared-nestjs_conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/q/job-types"]
      <<: *healthcheck-fragments
    command: "nx run --verbose microservice-job-broker:deploy:$CI_BUILD_TYPE"
    environment:
      NODE_ENV: ${CI_BUILD_TYPE}
      DEBUG: ${CI_DEBUG}
    networks:
      - traefik-public
      - rmq_net
      - db_net
    deploy:
      placement:
        constraints:
          - node.labels.host_performance != low
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-job-broker-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/q`)
        - traefik.http.routers.${APP_NAME}-job-broker-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-job-broker-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-job-broker-http.service=${APP_NAME}-job-broker
        - traefik.http.routers.${APP_NAME}-job-broker-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/q`)
        - traefik.http.routers.${APP_NAME}-job-broker-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-job-broker-https.tls=true
        - traefik.http.routers.${APP_NAME}-job-broker-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-job-broker-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-job-broker-https.service=${APP_NAME}-job-broker
        - traefik.http.services.${APP_NAME}-job-broker.loadbalancer.server.port=3000

  job-worker:
    image: ${IMAGE_BACKEND}
    <<: *shared-nestjs_conf
    command: "nx run --verbose microservice-job-broker:deploy-consumer:$CI_BUILD_TYPE"
    environment:
      NODE_ENV: ${CI_BUILD_TYPE}
      DEBUG: ${CI_DEBUG}
    networks:
      - rmq_net
      - db_net
    deploy:
      mode: replicated
      replicas: ${NUM_WORKERS}
      placement:
        max_replicas_per_node: 128

  backend:
    image: ${IMAGE_BACKEND}
    <<: *shared-nestjs_conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      <<: *healthcheck-fragments
    networks:
      - traefik-public
      - db_net
    command: "nx run --verbose web-backend:deploy:$CI_BUILD_TYPE"
    secrets:
      - CI_JWT_SECRET
    environment:
      JWT_SECRET_KEY_FILE: /run/secrets/CI_JWT_SECRET
      NODE_ENV: ${CI_BUILD_TYPE}
      DEBUG: ${CI_DEBUG}
    deploy:
      placement:
        constraints:
          - node.labels.host_performance != low
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-backend-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/api`)
        - traefik.http.routers.${APP_NAME}-backend-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-backend-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-backend-http.service=${APP_NAME}-backend
        - traefik.http.routers.${APP_NAME}-backend-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/api`)
        - traefik.http.routers.${APP_NAME}-backend-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-backend-https.tls=true
        - traefik.http.routers.${APP_NAME}-backend-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-backend-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-backend-https.service=${APP_NAME}-backend
        - traefik.http.services.${APP_NAME}-backend.loadbalancer.server.port=8000

  mongodb-express:
    image: mongo-express:latest
    networks:
      - traefik-public
      - db_net
    <<: *volumes-timezone
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_BASICAUTH_ENABLED: 'false'
      ME_CONFIG_SITE_BASEURL: /mongo/
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-mx-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mongo`)
        - traefik.http.routers.${APP_NAME}-mx-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-mx-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-mx-http.service=${APP_NAME}-mx
        - traefik.http.routers.${APP_NAME}-mx-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mongo`)
        - traefik.http.routers.${APP_NAME}-mx-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-mx-https.tls=true
        - traefik.http.routers.${APP_NAME}-mx-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-mx-https.middlewares=gzip,traefik-forward-auth
        - traefik.http.routers.${APP_NAME}-mx-https.service=${APP_NAME}-mx
        - traefik.http.services.${APP_NAME}-mx.loadbalancer.server.port=8081

  rabbitmq:
    image: rabbitmq:management-alpine
    volumes:
      - "$ENV_SHARED_VOLUME_PATH/rabbitmq:/var/lib/rabbitmq"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    networks:
      - traefik-public
      - rmq_net
    configs:
      - source: rabbitmq_plugins
        target: /etc/rabbitmq/enabled_plugins
      - source: rabbitmq_conf
        target: /etc/rabbitmq/rabbitmq.conf
    deploy:
      placement:
        constraints:
          - node.labels.host_performance != low
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-rmq-http.rule=Host(`rmq-${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-rmq-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-rmq-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-rmq-http.service=${APP_NAME}-rmq
        - traefik.http.routers.${APP_NAME}-rmq-https.rule=Host(`rmq-${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-rmq-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-rmq-https.tls=true
        - traefik.http.routers.${APP_NAME}-rmq-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-rmq-https.middlewares=gzip,traefik-forward-auth
        - traefik.http.routers.${APP_NAME}-rmq-https.service=${APP_NAME}-rmq
        - traefik.http.services.${APP_NAME}-rmq.loadbalancer.server.port=15672
  mongodb:
    image: mongo:latest
    networks:
      - db_net
    volumes:
      - "$ENV_SHARED_VOLUME_PATH/mongodb:/data/db"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    deploy:
      placement:
        constraints:
          - node.labels.host_performance != low
