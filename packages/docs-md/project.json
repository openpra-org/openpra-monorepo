{
  "name": "docs-md",
  "root": "packages/docs-md",
  "sourceRoot": "packages/docs-md",
  "projectType": "library",
  "targets": {
    "ts:markdown": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec typedoc --plugin typedoc-plugin-markdown --out api/ts/web-editor --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig tsconfig.typedoc.json --skipErrorChecking --entryPointStrategy expand ../../packages/frontend/web-editor/src/utils/constants.ts ../../packages/frontend/web-editor/src/utils/scientificNotation.ts ../../packages/frontend/web-editor/src/utils/StringUtils.ts ../../packages/frontend/web-editor/src/utils/recalculateFrequencies.ts ../../packages/frontend/web-editor/src/utils/bayesianNodeIntersectionCalculator.ts ../../packages/frontend/web-editor/src/utils/faultTreeData.ts ../../packages/frontend/web-editor/src/utils/treeUtils.ts ../../packages/frontend/web-editor/src/app/components/treeNodes/faultTreeNodes/faultTreeNodeType.ts ../../packages/frontend/web-editor/src/app/components/treeNodes/eventSequenceNodes/eventSequenceNodeType.ts ../../packages/frontend/web-editor/src/app/components/treeEdges/eventSequenceEdges/eventSequenceEdgeType.ts"
      }
    },
    "ts:markdown:shared-sdk": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec sh -c 'cd ../../packages/shared-sdk && typedoc --plugin typedoc-plugin-markdown --out ../docs-md/api/ts/shared-sdk --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig tsconfig.json --skipErrorChecking src/index.ts'"
      }
    },
    "ts:markdown:shared-types": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec sh -c 'cd ../../packages/shared-types && typedoc --plugin typedoc-plugin-markdown --out ../docs-md/api/ts/shared-types --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig tsconfig.json --skipErrorChecking src/index.ts'"
      }
    },
    "ts:markdown:mef-types": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec typedoc --plugin typedoc-plugin-markdown --out api/ts/mef-types --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig ../../packages/mef-types/tsconfig.json --skipErrorChecking ../../packages/mef-types/src/index.ts"
      }
    },
    "ts:markdown:mef-schema": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec typedoc --plugin typedoc-plugin-markdown --out api/ts/mef-schema --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig ../../packages/mef-schema/tsconfig.lib.json --skipErrorChecking ../../packages/mef-schema/src/index.ts"
      }
    },
    "ts:markdown:model-generator": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec sh -c 'cd ../../packages/model-generator && typedoc --plugin typedoc-plugin-markdown --out ../docs-md/api/ts/model-generator --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig tsconfig.json --skipErrorChecking src/index.ts'"
      }
    },
    "ts:markdown:web-backend": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec sh -c 'cd ../../packages/web-backend && typedoc --plugin typedoc-plugin-markdown --out ../docs-md/api/ts/web-backend --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig tsconfig.json --skipErrorChecking src/main.ts'"
      }
    },
    "ts:markdown:job-broker": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec sh -c 'cd ../../packages/microservice/job-broker && typedoc --plugin typedoc-plugin-markdown --out ../../docs-md/api/ts/job-broker --hideBreadcrumbs --excludeExternals --excludePrivate --excludeInternal --exclude **/*.spec.ts --tsconfig tsconfig.json --skipErrorChecking src/main.ts'"
      }
    },
    "cpp:doxygen-xml": {
      "executor": "nx:run-commands",
      "options": {
        "command": "mkdir -p packages/docs-md/.tmp/doxygen && doxygen packages/docs-md/tools/Doxyfile.xml && echo 'Doxygen XML generated'"
      }
    },
    "cpp:doxybook2": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash -c 'set -e; BIN=\"$(packages/docs-md/tools/install-doxybook2.sh)\" && cd packages/docs-md && mkdir -p api/cpp-doxybook2 && \"$BIN\" --input .tmp/doxygen/doxygen-xml --output api/cpp-doxybook2 --config tools/doxybook2.json'"
      },
      "dependsOn": ["cpp:doxygen-xml"]
    },
    "cpp:sanitize": {
      "executor": "nx:run-commands",
      "options": {
        "command": "node packages/docs-md/tools/sanitize-doxybook2-frontmatter.mjs"
      },
      "dependsOn": ["cpp:doxybook2"]
    },
    "site:dev": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md dev"
      },
      "dependsOn": []
    },
    "site:build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md build"
      },
      "dependsOn": [
        "ts:markdown",
        "ts:markdown:shared-sdk",
        "ts:markdown:shared-types",
        "ts:markdown:mef-types",
        "ts:markdown:mef-schema",
        "ts:markdown:model-generator",
        "ts:markdown:web-backend",
        "ts:markdown:job-broker",
        "cpp:sanitize"
      ]
    },
    "prepare": {
      "executor": "nx:run-commands",
      "options": {
        "command": "echo prepared"
      },
      "dependsOn": [
        "ts:markdown",
        "ts:markdown:shared-sdk",
        "ts:markdown:shared-types",
        "ts:markdown:mef-types",
        "ts:markdown:mef-schema",
        "ts:markdown:model-generator",
        "ts:markdown:web-backend",
        "ts:markdown:job-broker",
        "cpp:sanitize"
      ]
    },
    "site:link-check": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm --filter docs-md exec linkinator .vitepress/dist/index.html --recurse --silent --skip '.*#.*'"
      },
      "dependsOn": ["site:build"]
    }
  },
  "tags": []
}
