<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

    <!-- ############################################################### -->
    <!-- I. Calculation Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- I.1. Models -->
    <!-- ============================================================= -->

    <start>
        <element name="opsa-mef">
            <optional>
                <ref name="name"/>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <choice>
                    <ref name="fault-tree-definition"/>
                </choice>
            </zeroOrMore>
            <optional>
                <element name="model-data">
                    <zeroOrMore>
                        <choice>
                            <ref name="house-event-definition"/>
                            <ref name="basic-event-definition"/>
                        </choice>
                    </zeroOrMore>
                </element>
            </optional>
        </element>
    </start>

    <define name="Identifier">
        <data type="NCName">
            <param name="pattern">[^\-.]+(-[^\-.]+)*</param>
        </data>
    </define>

    <define name="name">
        <attribute name="name"> <ref name="Identifier"/> </attribute>
    </define>

    <define name="reference">
        <attribute name="name">
            <ref name="Identifier"/>
        </attribute>
    </define>

    <define name="NonEmptyString">  <!-- Texts without LF and other special chars. -->
        <data type="normalizedString">
            <param name="minLength">1</param>
        </data>
    </define>

    <define name="label">
        <element name="label"> <ref name="NonEmptyString"/> </element>
    </define>

    <define name="attributes">
        <element name="attributes">
            <zeroOrMore>
                <element name="attribute">
                    <ref name="name"/>
                    <attribute name="value"> <ref name="NonEmptyString"/> </attribute>
                    <optional>
                        <attribute name="type"> <ref name="NonEmptyString"/> </attribute>
                    </optional>
                </element>
            </zeroOrMore>
        </element>
    </define>


    <!-- ============================================================= -->
    <!-- I.2. Consequences, Consequence Groups -->
    <!-- ============================================================= -->


    <!-- ============================================================= -->
    <!-- I.3. Missions, Phases -->
    <!-- ============================================================= -->


    <!-- ############################################################### -->
    <!-- II. Event Tree Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- II.1. Initiating events, Initiating event Groups -->
    <!-- ============================================================= -->


    <!-- ============================================================= -->
    <!-- II.2. Event Trees -->
    <!-- ============================================================= -->


    <!-- ============================================================= -->
    <!-- II.3. Instructions, Rules -->
    <!-- ============================================================= -->


    <!-- ############################################################### -->
    <!-- III. Meta-Logical Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- III.1. CCF-Groups -->
    <!-- ============================================================= -->


    <!-- ============================================================= -->
    <!-- III.2. Substitutions -->
    <!-- ============================================================= -->


    <!-- ############################################################### -->
    <!-- IV. Fault Tree Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- IV.1. Definitions of Fault Trees & Components -->
    <!-- ============================================================= -->

    <define name="fault-tree-definition">
        <element name="define-fault-tree">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <choice>
                    <ref name="event-definition"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="event-definition">
        <choice>
            <ref name="gate-definition"/>
            <ref name="house-event-definition"/>
            <ref name="basic-event-definition"/>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- IV.2. Definitions of Gates, House Events & Basic Events -->
    <!-- ============================================================= -->

    <define name="gate-definition">
        <element name="define-gate">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <ref name="formula"/>
        </element>
    </define>

    <define name="house-event-definition">
        <element name="define-house-event">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <optional>
                <ref name="Boolean-constant"/>
            </optional>
        </element>
    </define>

    <define name="basic-event-definition">
        <element name="define-basic-event">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <optional>
                <ref name="expression"/>
            </optional>
        </element>
    </define>


    <!-- ============================================================= -->
    <!-- IV.3. Formulae -->
    <!-- ============================================================= -->

    <define name="formula">
        <choice>
            <ref name="event"/>
            <element name="and">
                <oneOrMore>
                    <ref name="event"/>
                </oneOrMore>
            </element>
            <element name="or">
                <oneOrMore>
                    <ref name="event"/>
                </oneOrMore>
            </element>
            <element name="not">
                <ref name="event"/>
            </element>
            <element name="xor">
                <oneOrMore>
                    <ref name="event"/>
                </oneOrMore>
            </element>
            <element name="nand">
                <oneOrMore>
                    <ref name="event"/>
                </oneOrMore>
            </element>
            <element name="nor">
                <oneOrMore>
                    <ref name="event"/>
                </oneOrMore>
            </element>
            <element name="atleast">
                <attribute name="min"> <data type="nonNegativeInteger"/> </attribute>
                <oneOrMore>
                    <ref name="event"/>
                </oneOrMore>
            </element>
        </choice>
    </define>

    <define name="event">
        <choice>
            <element name="event">
                <ref name="reference"/>
                <optional>
                    <attribute name="type">
                        <ref name="event-type"/>
                    </attribute>
                </optional>
            </element>
            <ref name="gate"/>
            <ref name="house-event"/>
            <ref name="basic-event"/>
        </choice>
    </define>

    <define name="event-type">
        <choice>
            <value>gate</value>
            <value>basic-event</value>
            <value>house-event</value>
        </choice>
    </define>

    <define name="gate">
        <element name="gate">
            <ref name="reference"/>
        </element>
    </define>

    <define name="house-event">
        <element name="house-event">
            <ref name="reference"/>
        </element>
    </define>

    <define name="basic-event">
        <element name="basic-event">
            <ref name="reference"/>
        </element>
    </define>

    <define name="Boolean-constant">
        <element name="constant">
            <attribute name="value"> <data type="boolean"/> </attribute>
        </element>
    </define>


    <!-- ############################################################### -->
    <!-- V. Stochastic Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- V.1. Definition of Parameters -->
    <!-- ============================================================= -->

    <!-- ============================================================= -->
    <!-- V.2. Expressions -->
    <!-- ============================================================= -->

    <!-- *********************************************************** -->
    <!-- V.2.1. Entities -->
    <!-- *********************************************************** -->

    <define name="expression">
        <choice>
            <ref name="constant"/>
            <ref name="built-in"/>
        </choice>
    </define>

    <define name="constant">
        <choice>
            <ref name="bool"/>
            <ref name="int"/>
            <ref name="float"/>
        </choice>
    </define>

    <define name="built-in">
        <choice>
            <ref name="exponential"/>
        </choice>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.2. Constants, Parameters -->
    <!-- *********************************************************** -->

    <define name="bool">
        <element name="bool">
            <attribute name="value"> <data type="boolean"/> </attribute>
        </element>
    </define>

    <define name="int">
        <element name="int">
            <attribute name="value">
                <data type="integer"/>
            </attribute>
        </element>
    </define>

    <define name="float">
        <element name="float">
            <attribute name="value">
                <data type="double"/>
            </attribute>
        </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.3. Numerical Expressions -->
    <!-- *********************************************************** -->


    <!-- *********************************************************** -->
    <!-- V.2.4. Boolean Expressions -->
    <!-- *********************************************************** -->


    <!-- *********************************************************** -->
    <!-- V.2.5. Conditional Expressions -->
    <!-- *********************************************************** -->


    <!-- *********************************************************** -->
    <!-- V.2.6. Built-ins -->
    <!-- *********************************************************** -->

    <define name="exponential">
        <element name="exponential">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.7. Random-Deviates -->
    <!-- *********************************************************** -->


    <!-- *********************************************************** -->
    <!-- V.2.8. Test-Events -->
    <!-- *********************************************************** -->

</grammar>


<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

    <!-- ############################################################### -->
    <!-- I. Calculation Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- I.1. Models -->
    <!-- ============================================================= -->

    <start>
        <element name="opsa-mef">
            <optional>
                <ref name="name"/>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <choice>
                    <ref name="model-data"/>
                    <ref name="event-tree-definition"/>
                    <ref name="alignment-definition"/>
                    <ref name="rule-definition"/>
                    <ref name="initiating-event-definition"/>
                    <ref name="fault-tree-definition"/>
                    <ref name="substitution-definition"/>
                    <ref name="CCF-group-definition"/>
                    <ref name="extern-library-definition"/>
                    <ref name="extern-function-definition"/>
                </choice>
            </zeroOrMore>
        </element>
    </start>

    <define name="Identifier">
        <data type="NCName">
            <param name="pattern">[^\-.]+(-[^\-.]+)*</param>
        </data>
    </define>

    <define name="name">
        <attribute name="name"> <ref name="Identifier"/> </attribute>
    </define>

    <define name="reference">
        <attribute name="name">
            <data type="NCName">
                <param name="pattern">([^\-.]+(-[^\-.]+)*)(\.\i[^\-.]*(-[^\-.]+)*)*</param>
            </data>
        </attribute>
    </define>

    <define name="NonEmptyString">  <!-- Texts without LF and other special chars. -->
        <data type="normalizedString">
            <param name="minLength">1</param>
        </data>
    </define>

    <define name="label">
        <element name="label"> <ref name="NonEmptyString"/> </element>
    </define>

    <define name="attributes">
        <element name="attributes">
            <zeroOrMore>
                <element name="attribute">
                    <ref name="name"/>
                    <attribute name="value"> <ref name="NonEmptyString"/> </attribute>
                    <optional>
                        <attribute name="type"> <ref name="NonEmptyString"/> </attribute>
                    </optional>
                </element>
            </zeroOrMore>
        </element>
    </define>


    <!-- ============================================================= -->
    <!-- I.2. Consequences, Consequence Groups -->
    <!-- ============================================================= -->


    <!-- ============================================================= -->
    <!-- I.3. Missions, Phases -->
    <!-- ============================================================= -->

    <define name="alignment-definition">
        <element name="define-alignment">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <oneOrMore>
                <ref name="phase-definition"/>
            </oneOrMore>
        </element>
    </define>

    <define name="phase-definition">
        <element name="define-phase">
            <ref name="name"/>
            <attribute name="time-fraction"> <data type="double"/> </attribute>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <ref name="set-house-event"/>
            </zeroOrMore>
        </element>
    </define>


    <!-- ############################################################### -->
    <!-- II. Event Tree Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- II.1. Initiating events, Initiating event Groups -->
    <!-- ============================================================= -->

    <define name="initiating-event-definition">
        <element name="define-initiating-event">
            <ref name="name"/>
            <optional>
                <attribute name="event-tree"> <ref name="Identifier"/> </attribute>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
        </element>
    </define>


    <!-- ============================================================= -->
    <!-- II.2. Event Trees -->
    <!-- ============================================================= -->

    <define name="event-tree-definition">
        <element name="define-event-tree">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <ref name="functional-event-definition"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="sequence-definition"/>
            </zeroOrMore>
            <zeroOrMore>
                <ref name="branch-definition"/>
            </zeroOrMore>
            <ref name="initial-state"/>
        </element>
    </define>

    <define name="functional-event-definition">
        <element name="define-functional-event">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
        </element>
    </define>

    <define name="sequence-definition">
        <element name="define-sequence">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <ref name="instruction"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="branch-definition">
        <element name="define-branch">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <ref name="branch"/>
        </element>
    </define>

    <define name="initial-state">
        <element name="initial-state">
            <ref name="branch"/>
        </element>
    </define>

    <define name="branch">
        <zeroOrMore>
            <ref name="instruction"/>
        </zeroOrMore>
        <choice>
            <ref name="fork"/>
            <ref name="end-state"/>
        </choice>
    </define>

    <define name="fork">
        <element name="fork">
            <attribute name="functional-event"> <ref name="Identifier"/> </attribute>
            <oneOrMore>
                <ref name="path"/>
            </oneOrMore>
        </element>
    </define>

    <define name="path">
        <element name="path">
            <attribute name="state"> <ref name="Identifier"/> </attribute>
            <ref name="branch"/>
        </element>
    </define>

    <define name="end-state">
        <choice>
            <element name="sequence">
                <ref name="name"/>
            </element>
            <element name="branch">
                <ref name="name"/>
            </element>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- II.3. Instructions, Rules -->
    <!-- ============================================================= -->

    <define name="instruction">
        <choice>
            <ref name="set"/>
            <ref name="collect"/>
            <ref name="if-then-else"/>
            <ref name="block"/>
            <ref name="rule"/>
            <ref name="link"/>
        </choice>
    </define>

    <define name="set">
        <choice>
            <ref name="set-house-event"/>
        </choice>
    </define>

    <define name="set-house-event">
        <element name="set-house-event">
            <ref name="name"/>
            <optional>
                <attribute name="direction">
                    <ref name="direction"/>
                </attribute>
            </optional>
            <ref name="Boolean-constant"/>
        </element>
    </define>

    <define name="direction">
        <choice>
            <value>forward</value>
        </choice>
    </define>

    <define name="if-then-else">
        <element name="if">
            <ref name="expression"/>
            <ref name="instruction"/>
            <optional>
                <ref name="instruction"/>
            </optional>
        </element>
    </define>

    <define name="collect">
        <choice>
            <ref name="collect-formula"/>
            <ref name="collect-expression"/>
        </choice>
    </define>

    <define name="collect-formula">
        <element name="collect-formula">
            <ref name="formula"/>
        </element>
    </define>

    <define name="collect-expression">
        <element name="collect-expression">
            <ref name="expression"/>
        </element>
    </define>

    <define name="block">
        <element name="block">
            <zeroOrMore>
                <ref name="instruction"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="rule">
        <element name="rule">
            <ref name="name"/>
        </element>
    </define>

    <define name="link">
        <element name="event-tree">
            <ref name="name"/>
        </element>
    </define>

    <define name="rule-definition">
        <element name="define-rule">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <oneOrMore>
                <ref name="instruction"/>
            </oneOrMore>
        </element>
    </define>


    <!-- ############################################################### -->
    <!-- III. Meta-Logical Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- III.1. CCF-Groups -->
    <!-- ============================================================= -->

    <define name="CCF-group-definition">
        <element name="define-CCF-group">
            <ref name="name"/>
            <attribute name="model">
                <ref name="CCF-model"/>
            </attribute>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <ref name="members"/>
            <ref name="distribution"/>
            <ref name="factors"/>
        </element>
    </define>

    <define name="members">
        <element name="members">
            <oneOrMore>
                <ref name="basic-event"/>
            </oneOrMore>
        </element>
    </define>

    <define name="factors">
        <choice>
            <element name="factors">
                <oneOrMore>
                    <ref name="factor"/>
                </oneOrMore>
            </element>
            <ref name="factor"/>
        </choice>
    </define>

    <define name="factor">
        <element name="factor">
            <optional>
                <attribute name="level"> <data type="positiveInteger"/> </attribute>
            </optional>
            <ref name="expression"/>
        </element>
    </define>

    <define name="distribution">
        <element name="distribution">
            <ref name="expression"/>
        </element>
    </define>

    <define name="CCF-model">
        <choice>
            <value>beta-factor</value>
            <value>MGL</value>
            <value>alpha-factor</value>
            <value>phi-factor</value>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- III.2. Substitutions -->
    <!-- ============================================================= -->

    <define name="substitution-definition">
        <element name="define-substitution">
            <ref name="name"/>
            <optional>
                <attribute name="type">
                    <choice>
                        <value>delete-terms</value>
                        <value>recovery-rule</value>
                        <value>exchange-event</value>
                    </choice>
                </attribute>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <element name="hypothesis">
                <ref name="formula"/>
            </element>
            <optional>
                <element name="source">
                    <oneOrMore>
                        <ref name="basic-event"/>
                    </oneOrMore>
                </element>
            </optional>
            <element name="target">
                <choice>
                    <ref name="basic-event"/>
                    <ref name="Boolean-constant"/>
                </choice>
            </element>
        </element>
    </define>


    <!-- ############################################################### -->
    <!-- IV. Fault Tree Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- IV.1. Definitions of Fault Trees & Components -->
    <!-- ============================================================= -->

    <define name="fault-tree-definition">
        <element name="define-fault-tree">
            <ref name="name"/>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <choice>
                    <ref name="CCF-group-definition"/>
                    <ref name="event-definition"/>
                    <ref name="component-definition"/>
                    <ref name="parameter-definition"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="component-definition">
        <element name="define-component">
            <ref name="name"/>
            <optional>
                <ref name="role"/>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <zeroOrMore>
                <choice>
                    <ref name="CCF-group-definition"/>
                    <ref name="event-definition"/>
                    <ref name="component-definition"/>
                    <ref name="parameter-definition"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="role">
        <attribute name="role">
            <choice>
                <value>private</value>
                <value>public</value>
            </choice>
        </attribute>
    </define>

    <define name="model-data">
        <element name="model-data">
            <zeroOrMore>
                <choice>
                    <ref name="house-event-definition"/>
                    <ref name="basic-event-definition"/>
                    <ref name="parameter-definition"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="event-definition">
        <choice>
            <ref name="gate-definition"/>
            <ref name="house-event-definition"/>
            <ref name="basic-event-definition"/>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- IV.2. Definitions of Gates, House Events & Basic Events -->
    <!-- ============================================================= -->

    <define name="gate-definition">
        <element name="define-gate">
            <ref name="name"/>
            <optional>
                <ref name="role"/>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <ref name="formula"/>
        </element>
    </define>

    <define name="house-event-definition">
        <element name="define-house-event">
            <ref name="name"/>
            <optional>
                <ref name="role"/>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <optional>
                <ref name="Boolean-constant"/>
            </optional>
        </element>
    </define>

    <define name="basic-event-definition">
        <element name="define-basic-event">
            <ref name="name"/>
            <optional>
                <ref name="role"/>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <optional>
                <ref name="expression"/>
            </optional>
        </element>
    </define>


    <!-- ============================================================= -->
    <!-- IV.3. Formulae -->
    <!-- ============================================================= -->

    <define name="formula">
        <choice>
            <ref name="argument"/>
            <element name="and">
                <oneOrMore>
                    <ref name="argument"/>
                </oneOrMore>
            </element>
            <element name="or">
                <oneOrMore>
                    <ref name="argument"/>
                </oneOrMore>
            </element>
            <element name="xor">
                <ref name="argument"/>
                <ref name="argument"/>
            </element>
            <element name="iff">
                <ref name="argument"/>
                <ref name="argument"/>
            </element>
            <element name="nand">
                <oneOrMore>
                    <ref name="argument"/>
                </oneOrMore>
            </element>
            <element name="nor">
                <oneOrMore>
                    <ref name="argument"/>
                </oneOrMore>
            </element>
            <element name="atleast">
                <attribute name="min"> <data type="nonNegativeInteger"/> </attribute>
                <oneOrMore>
                    <ref name="argument"/>
                </oneOrMore>
            </element>
            <element name="cardinality">
                <attribute name="min"> <data type="nonNegativeInteger"/> </attribute>
                <attribute name="max"> <data type="nonNegativeInteger"/> </attribute>
                <oneOrMore>
                    <ref name="argument"/>
                </oneOrMore>
            </element>
            <element name="imply">
                <ref name="argument"/>
                <ref name="argument"/>
            </element>
        </choice>
    </define>

    <define name="argument">
        <choice>
            <ref name="event"/>
            <element name="not">
                <ref name="event"/>
            </element>
            <ref name="Boolean-constant"/>
        </choice>
    </define>

    <define name="event">
        <choice>
            <element name="event">
                <ref name="reference"/>
                <optional>
                    <attribute name="type">
                        <ref name="event-type"/>
                    </attribute>
                </optional>
            </element>
            <ref name="gate"/>
            <ref name="house-event"/>
            <ref name="basic-event"/>
        </choice>
    </define>

    <define name="event-type">
        <choice>
            <value>gate</value>
            <value>basic-event</value>
            <value>house-event</value>
        </choice>
    </define>

    <define name="gate">
        <element name="gate">
            <ref name="reference"/>
        </element>
    </define>

    <define name="house-event">
        <element name="house-event">
            <ref name="reference"/>
        </element>
    </define>

    <define name="basic-event">
        <element name="basic-event">
            <ref name="reference"/>
        </element>
    </define>

    <define name="Boolean-constant">
        <element name="constant">
            <attribute name="value"> <data type="boolean"/> </attribute>
        </element>
    </define>


    <!-- ############################################################### -->
    <!-- V. Stochastic Layer -->
    <!-- ############################################################### -->

    <!-- ============================================================= -->
    <!-- V.1. Definition of Parameters -->
    <!-- ============================================================= -->

    <define name="parameter-definition">
        <element name="define-parameter">
            <ref name="name"/>
            <optional>
                <ref name="role"/>
            </optional>
            <optional>
                <attribute name="unit">
                    <ref name="units"/>
                </attribute>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <ref name="expression"/>
        </element>
    </define>

    <define name="units">
        <choice>
            <value>bool</value>
            <value>int</value>
            <value>float</value>
            <value>hours</value>
            <value>hours-1</value>
            <value>years</value>
            <value>years-1</value>
            <value>fit</value>
            <value>demands</value>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- V.2. Expressions -->
    <!-- ============================================================= -->

    <!-- *********************************************************** -->
    <!-- V.2.1. Entities -->
    <!-- *********************************************************** -->

    <define name="expression">
        <choice>
            <ref name="constant"/>
            <ref name="parameter"/>
            <ref name="operation"/>
            <ref name="built-in"/>
            <ref name="random-deviate"/>
            <ref name="test-event"/>
        </choice>
    </define>

    <define name="constant">
        <choice>
            <ref name="bool"/>
            <ref name="int"/>
            <ref name="float"/>
        </choice>
    </define>

    <define name="parameter">
        <choice>
            <element name="parameter">
                <ref name="reference"/>
                <optional>
                    <attribute name="unit">
                        <ref name="units"/>
                    </attribute>
                </optional>
            </element>
            <element name="system-mission-time">
                <optional>
                    <attribute name="unit">
                        <ref name="units"/>
                    </attribute>
                </optional>
            </element>
        </choice>
    </define>

    <define name="operation">
        <choice>
            <ref name="numerical-operation"/>
            <ref name="Boolean-operation"/>
            <ref name="conditional-operation"/>
        </choice>
    </define>

    <define name="built-in">
        <choice>
            <ref name="exponential"/>
            <ref name="GLM"/>
            <ref name="Weibull"/>
            <ref name="periodic-test"/>
            <ref name="extern-function"/>
        </choice>
    </define>

    <define name="random-deviate">
        <choice>
            <ref name="uniform-deviate"/>
            <ref name="normal-deviate"/>
            <ref name="lognormal-deviate"/>
            <ref name="gamma-deviate"/>
            <ref name="beta-deviate"/>
            <ref name="histogram"/>
        </choice>
    </define>

    <define name="test-event">
        <choice>
            <ref name="test-initiating-event"/>
            <ref name="test-functional-event"/>
        </choice>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.2. Constants, Parameters -->
    <!-- *********************************************************** -->

    <define name="bool">
        <element name="bool">
            <attribute name="value"> <data type="boolean"/> </attribute>
        </element>
    </define>

    <define name="int">
        <element name="int">
            <attribute name="value">
                <data type="integer"/>
            </attribute>
        </element>
    </define>

    <define name="float">
        <element name="float">
            <attribute name="value">
                <data type="double"/>
            </attribute>
        </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.3. Numerical Expressions -->
    <!-- *********************************************************** -->

    <define name="numerical-operation">
        <choice>
            <element name="neg">
                <ref name="expression"/>
            </element>
            <element name="add">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="sub">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="mul">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="div">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="pi"> <empty/> </element>
            <element name="abs">
                <ref name="expression"/>
            </element>
            <element name="acos">
                <ref name="expression"/>
            </element>
            <element name="asin">
                <ref name="expression"/>
            </element>
            <element name="atan">
                <ref name="expression"/>
            </element>
            <element name="cos">
                <ref name="expression"/>
            </element>
            <element name="cosh">
                <ref name="expression"/>
            </element>
            <element name="exp">
                <ref name="expression"/>
            </element>
            <element name="log">
                <ref name="expression"/>
            </element>
            <element name="log10">
                <ref name="expression"/>
            </element>
            <element name="mod">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="pow">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="sin">
                <ref name="expression"/>
            </element>
            <element name="sinh">
                <ref name="expression"/>
            </element>
            <element name="tan">
                <ref name="expression"/>
            </element>
            <element name="tanh">
                <ref name="expression"/>
            </element>
            <element name="sqrt">
                <ref name="expression"/>
            </element>
            <element name="ceil">
                <ref name="expression"/>
            </element>
            <element name="floor">
                <ref name="expression"/>
            </element>
            <element name="min">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="max">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="mean">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
        </choice>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.4. Boolean Expressions -->
    <!-- *********************************************************** -->

    <define name="Boolean-operation">
        <choice>
            <element name="not">
                <ref name="expression"/>
            </element>
            <element name="and">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="or">
                <oneOrMore>
                    <ref name="expression"/>
                </oneOrMore>
            </element>
            <element name="eq">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="df">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="lt">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="gt">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="leq">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
            <element name="geq">
                <ref name="expression"/>
                <ref name="expression"/>
            </element>
        </choice>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.5. Conditional Expressions -->
    <!-- *********************************************************** -->

    <define name="conditional-operation">
        <choice>
            <ref name="if-then-else-operation"/>
            <ref name="switch-operation"/>
        </choice>
    </define>

    <define name="if-then-else-operation">
        <element name="ite">
            <ref name="expression"/>
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="switch-operation">
        <element name="switch">
            <zeroOrMore>
                <ref name="case-operation"/>
            </zeroOrMore>
            <ref name="expression"/>
        </element>
    </define>

    <define name="case-operation">
        <element name="case">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.6. Built-ins -->
    <!-- *********************************************************** -->

    <define name="exponential">
        <element name="exponential">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="GLM">
        <element name="GLM">
            <ref name="expression"/>
            <ref name="expression"/>
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="Weibull">
        <element name="Weibull">
            <ref name="expression"/>
            <ref name="expression"/>
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="periodic-test">
        <element name="periodic-test">
            <oneOrMore>
                <ref name="expression"/>
            </oneOrMore>
        </element>
    </define>

    <define name="extern-function">
        <element name="extern-function">
            <ref name="name"/>
            <zeroOrMore>
                <ref name="expression"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="extern-library-definition">
        <element name="define-extern-library">
            <ref name="name"/>
            <attribute name="path"> <data type="anyURI"/> </attribute>
            <optional>
                <attribute name="system"> <data type="boolean"/> </attribute>
            </optional>
            <optional>
                <attribute name="decorate"> <data type="boolean"/> </attribute>
            </optional>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
        </element>
    </define>

    <define name="extern-function-definition">
        <element name="define-extern-function">
            <ref name="name"/>
            <attribute name="symbol"> <ref name="Identifier"/> </attribute>
            <attribute name="library"> <ref name="Identifier"/> </attribute>
            <optional>
                <ref name="label"/>
            </optional>
            <optional>
                <ref name="attributes"/>
            </optional>
            <ref name="extern-function-return-type"/>
            <zeroOrMore>
                <ref name="extern-function-parameter-type"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="extern-function-return-type">
        <ref name="extern-function-parameter-type"/>
    </define>

    <define name="extern-function-parameter-type">
        <choice>
            <element name="int"> <empty/> </element>
            <element name="double"> <empty/> </element>
        </choice>
    </define>


    <!-- *********************************************************** -->
    <!-- V.2.7. Random-Deviates -->
    <!-- *********************************************************** -->

    <define name="uniform-deviate">
        <element name="uniform-deviate">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="normal-deviate">
        <element name="normal-deviate">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="lognormal-deviate">
        <element name="lognormal-deviate">
            <ref name="expression"/>
            <ref name="expression"/>
            <optional>
                <ref name="expression"/>
            </optional>
        </element>
    </define>

    <define name="gamma-deviate">
        <element name="gamma-deviate">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="beta-deviate">
        <element name="beta-deviate">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <define name="histogram">
        <element name="histogram">
            <ref name="expression"/>
            <oneOrMore>
                <ref name="bin"/>
            </oneOrMore>
        </element>
    </define>

    <define name="bin">
        <element name="bin">
            <ref name="expression"/>
            <ref name="expression"/>
        </element>
    </define>

    <!-- *********************************************************** -->
    <!-- V.2.8. Test-Events -->
    <!-- *********************************************************** -->

    <define name="test-initiating-event">
        <element name="test-initiating-event">
            <ref name="name"/>
        </element>
    </define>

    <define name="test-functional-event">
        <element name="test-functional-event">
            <ref name="name"/>
            <attribute name="state"> <ref name="NonEmptyString"/> </attribute>
        </element>
    </define>

</grammar>


<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

    <start>
        <element name="scram">
            <optional>
                <!-- SCRAM version requirement -->
                <attribute name="version"> <data type="normalizedString"/> </attribute>
            </optional>
            <element name="model">
                <oneOrMore>
                    <element name="file"> <data type="anyURI"/> </element>
                </oneOrMore>
            </element>
            <ref name="options"/>
        </element>
    </start>

    <define name="options">
        <element name="options">
            <optional>
                <element name="algorithm">
                    <attribute name="name">
                        <choice>
                            <value>mocus</value>
                            <value>bdd</value>
                            <value>zbdd</value>
                        </choice>
                    </attribute>
                </element>
            </optional>
            <optional>
                <element name="prime-implicants"> <empty/> </element>
            </optional>
            <optional>
                <element name="analysis">
                    <interleave>
                        <optional>
                            <attribute name="probability"> <data type="boolean"/> </attribute>
                        </optional>
                        <optional>
                            <attribute name="importance"> <data type="boolean"/> </attribute>
                        </optional>
                        <optional>
                            <attribute name="uncertainty"> <data type="boolean"/> </attribute>
                        </optional>
                        <optional>
                            <attribute name="ccf"> <data type="boolean"/> </attribute>
                        </optional>
                        <optional>
                            <attribute name="sil"> <data type="boolean"/> </attribute>
                        </optional>
                    </interleave>
                </element>
            </optional>
            <optional>
                <element name="approximation">
                    <attribute name="name">
                        <choice>
                            <value>rare-event</value>
                            <value>mcub</value>
                        </choice>
                    </attribute>
                </element>
            </optional>
            <optional>
                <ref name="limits"/>
            </optional>
        </element>
    </define>

    <define name="limits">
        <element name="limits">
            <interleave>
                <optional>
                    <element name="product-order"> <data type="nonNegativeInteger"/> </element>
                </optional>
                <optional>
                    <element name="mission-time"> <data type="double"/> </element>
                </optional>
                <optional>
                    <element name="time-step"> <data type="double"/> </element>
                </optional>
                <optional>
                    <element name="cut-off"> <data type="double"/> </element>
                </optional>
                <optional>
                    <element name="number-of-trials"> <data type="nonNegativeInteger"/> </element>
                </optional>
                <optional>
                    <element name="number-of-quantiles"> <data type="nonNegativeInteger"/> </element>
                </optional>
                <optional>
                    <element name="number-of-bins"> <data type="nonNegativeInteger"/> </element>
                </optional>
                <optional>
                    <element name="seed"> <data type="nonNegativeInteger"/> </element>
                </optional>
            </interleave>
        </element>
    </define>

</grammar>



<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

    <!-- ############################################################### -->
    <!-- Report Layer -->
    <!-- ############################################################### -->

    <start>
        <element name="report">
            <ref name="information-layer"/>
            <optional>
                <ref name="results-layer"/>
            </optional>
        </element>
    </start>

    <define name="probability-data">  <!-- [0.0, 1.0] values for probability -->
        <data type="double">
            <param name="minInclusive">0</param>
            <param name="maxInclusive">1</param>
        </data>
    </define>

    <!-- ############################################################### -->
    <!-- I. Information Layer -->
    <!-- ############################################################### -->

    <define name="information-layer">
        <element name="information">
            <element name="software">
                <attribute name="name"> <data type="string"/> </attribute>
                <attribute name="version"> <data type="string"/> </attribute>
                <optional>
                    <attribute name="contacts"> <text/> </attribute>
                </optional>
            </element>
            <element name="time"> <data type="string"/> </element>
            <optional>
                <ref name="performance-info"/>
            </optional>
            <zeroOrMore>
                <ref name="calculated-quantity"/>
            </zeroOrMore>
            <element name="model-features">
                <optional>
                    <attribute name="name"> <data type="NCName"/> </attribute>
                </optional>
                <optional>
                    <element name="gates">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="basic-events">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="house-events">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="ccf-groups">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="fault-trees">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="event-trees">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="functional-events">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="sequences">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="rules">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
                <optional>
                    <element name="initiating-events">
                        <data type="nonNegativeInteger"/>
                    </element>
                </optional>
            </element>
            <zeroOrMore>
                <element name="warning"> <text/> </element>
            </zeroOrMore>
            <optional>
                <element name="feedback"> <text/> </element>
            </optional>
        </element>
    </define>

    <define name="analysis-id">
        <attribute name="name"> <data type="NCName"/> </attribute>
        <optional>
            <attribute name="initiating-event"> <data type="NCName"/> </attribute>
        </optional>
        <optional>
            <group>
                <attribute name="alignment"> <data type="NCName"/> </attribute>
                <attribute name="phase"> <data type="NCName"/> </attribute>
            </group>
        </optional>
        <optional>
            <attribute name="description"> <text/> </attribute>
        </optional>
        <optional>
            <attribute name="warning"> <text/> </attribute>
        </optional>
    </define>

    <define name="performance-info">
        <element name="performance">
            <oneOrMore>
                <element name="calculation-time">
                    <ref name="analysis-id"/>
                    <optional>
                        <element name="products">
                            <data type="double"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="probability">
                            <data type="double"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="importance">
                            <data type="double"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="uncertainty">
                            <data type="double"/>
                        </element>
                    </optional>
                </element>
            </oneOrMore>
        </element>
    </define>

    <define name="calculated-quantity">
        <element name="calculated-quantity">
            <attribute name="name"> <text/> </attribute>
            <optional>
                <attribute name="definition"> <text/> </attribute>
            </optional>
            <zeroOrMore>
                <attribute name="approximation"> <text/> </attribute>
            </zeroOrMore>
            <optional>
                <ref name="calculation-method"/>
            </optional>
        </element>
    </define>

    <define name="calculation-method">
        <element name="calculation-method">
            <attribute name="name"> <text/> </attribute>
            <optional>
                <attribute name="warning"> <text/> </attribute>
            </optional>
            <optional>
                <element name="limits">
                    <optional>
                        <element name="product-order">
                            <data type="nonNegativeInteger"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="mission-time"> <data type="double"/> </element>
                    </optional>
                    <optional>
                        <element name="time-step"> <data type="double"/> </element>
                    </optional>
                    <optional>
                        <element name="cut-off"> <ref name="probability-data"/> </element>
                    </optional>
                    <optional>
                        <element name="number-of-sums">
                            <data type="nonNegativeInteger"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="number-of-trials">
                            <data type="nonNegativeInteger"/>
                        </element>
                    </optional>
                    <optional>
                        <element name="seed">
                            <data type="nonNegativeInteger"/>
                        </element>
                    </optional>
                </element>
            </optional>
        </element>
    </define>

    <!-- ############################################################### -->
    <!-- II. Results Layer -->
    <!-- ############################################################### -->

    <define name="results-layer">
        <element name="results">
            <oneOrMore>
                <choice>
                    <ref name="sum-of-products"/>
                    <ref name="importance"/>
                    <ref name="safety-integrity-levels"/>
                    <ref name="statistical-measure"/>
                    <ref name="curve"/>
                    <ref name="initiating-event"/>
                </choice>
            </oneOrMore>
        </element>
    </define>

    <!-- ============================================================= -->
    <!-- II.1. Sum of Products -->
    <!-- ============================================================= -->

    <define name="sum-of-products">
        <element name="sum-of-products">
            <ref name="analysis-id"/>
            <attribute name="basic-events">
                <data type="nonNegativeInteger"/>
            </attribute>
            <attribute name="products">
                <data type="nonNegativeInteger"/>
            </attribute>
            <optional>
                <attribute name="probability"> <ref name="probability-data"/> </attribute>
            </optional>
            <optional>
                <attribute name="distribution">
                    <list>
                        <oneOrMore>
                            <data type="nonNegativeInteger"/>
                        </oneOrMore>
                    </list>
                </attribute>
            </optional>
            <zeroOrMore>
                <ref name="product"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="product">
        <element name="product">
            <attribute name="order">
                <data type="positiveInteger"/>
            </attribute>
            <optional>
                <attribute name="probability"> <ref name="probability-data"/> </attribute>
            </optional>
            <optional>
                <attribute name="contribution"> <ref name="probability-data"/> </attribute>
            </optional>
            <zeroOrMore>
                <ref name="literal"/>
            </zeroOrMore>
        </element>
    </define>

    <define name="literal">
        <choice>
            <ref name="literal-event"/>
            <element name="not">
                <ref name="literal-event"/>
            </element>
        </choice>
    </define>

    <define name="literal-event">
        <choice>
            <element name="basic-event">
                <attribute name="name"> <data type="NCName"/> </attribute>
            </element>
            <element name="ccf-event">
                <attribute name="ccf-group"> <data type="NCName"/> </attribute>
                <attribute name="order"> <data type="positiveInteger"/> </attribute>
                <attribute name="group-size">
                    <data type="positiveInteger"/>
                </attribute>
                <oneOrMore>
                    <element name="basic-event">
                        <attribute name="name"> <data type="NCName"/> </attribute>
                    </element>
                </oneOrMore>
            </element>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- II.2. Statistical Measures -->
    <!-- ============================================================= -->

    <define name="statistical-measure">
        <element name="measure">
            <ref name="analysis-id"/>
            <element name="mean">
                <attribute name="value"> <ref name="probability-data"/> </attribute>
            </element>
            <element name="standard-deviation">
                <attribute name="value"> <ref name="probability-data"/> </attribute>
            </element>
            <element name="confidence-range">
                <attribute name="percentage">
                    <data type="double">
                        <param name="minExclusive">0</param>
                        <param name="maxExclusive">100</param>
                    </data>
                </attribute>
                <attribute name="lower-bound"> <ref name="probability-data"/> </attribute>
                <attribute name="upper-bound"> <ref name="probability-data"/> </attribute>
            </element>
            <element name="error-factor">
                <attribute name="percentage">
                    <data type="double">
                        <param name="minExclusive">0</param>
                        <param name="maxExclusive">100</param>
                    </data>
                </attribute>
                <attribute name="value">
                    <data type="double">
                        <param name="minExclusive">0</param>
                    </data>
                </attribute>
            </element>
            <ref name="quantiles"/>
            <ref name="histogram"/>
        </element>
    </define>

    <define name="quantiles">
        <element name="quantiles">
            <attribute name="number"> <data type="positiveInteger"/> </attribute>
            <oneOrMore>
                <ref name="quantile"/>
            </oneOrMore>
        </element>
    </define>

    <define name="quantile">
        <element name="quantile">
            <ref name="bin-data"/>
        </element>
    </define>

    <define name="histogram">
        <element name="histogram">
            <attribute name="number"> <data type="positiveInteger"/> </attribute>
            <oneOrMore>
                <ref name="bin"/>
            </oneOrMore>
        </element>
    </define>

    <define name="bin">
        <element name="bin">
            <ref name="bin-data"/>
        </element>
    </define>

    <define name="bin-data">
        <attribute name="number"> <data type="positiveInteger"/> </attribute>
        <attribute name="value"> <data type="double"/> </attribute>
        <attribute name="lower-bound"> <data type="double"/> </attribute>
        <attribute name="upper-bound"> <data type="double"/> </attribute>
    </define>

    <!-- ============================================================= -->
    <!-- II.3. Curves -->
    <!-- ============================================================= -->

    <define name="curve">
        <element name="curve">
            <ref name="analysis-id"/>
            <attribute name="X-title"> <data type="string"/> </attribute>
            <attribute name="Y-title"> <data type="string"/> </attribute>
            <optional>
                <attribute name="Z-title"> <data type="string"/> </attribute>
            </optional>
            <optional>
                <attribute name="X-unit"> <ref name="unit"/> </attribute>
            </optional>
            <optional>
                <attribute name="Y-unit"> <ref name="unit"/> </attribute>
            </optional>
            <optional>
                <attribute name="Z-unit"> <ref name="unit"/> </attribute>
            </optional>
            <zeroOrMore>
                <element name="point">
                    <attribute name="X"> <data type="double"/> </attribute>
                    <attribute name="Y"> <data type="double"/> </attribute>
                    <optional>
                        <attribute name="Z"> <data type="double"/> </attribute>
                    </optional>
                </element>
            </zeroOrMore>
        </element>
    </define>

    <define name="unit">
        <choice>
            <value>seconds</value>
            <value>hours</value>
            <value>seconds-1</value>
            <value>hours-1</value>
            <value>years</value>
            <value>years-1</value>
        </choice>
    </define>

    <!-- ============================================================= -->
    <!-- II.4. Importance -->
    <!-- ============================================================= -->

    <define name="importance">
        <element name="importance">
            <ref name="analysis-id"/>
            <attribute name="basic-events">
                <data type="nonNegativeInteger"/>
            </attribute>
            <zeroOrMore>
                <choice>
                    <element name="basic-event">
                        <attribute name="name"> <data type="NCName"/> </attribute>
                        <ref name="importance-factors"/>
                    </element>
                    <element name="ccf-event">
                        <attribute name="ccf-group"> <data type="NCName"/> </attribute>
                        <attribute name="order">
                            <data type="positiveInteger"/>
                        </attribute>
                        <attribute name="group-size">
                            <data type="positiveInteger"/>
                        </attribute>
                        <ref name="importance-factors"/>
                        <oneOrMore>
                            <element name="basic-event">
                                <attribute name="name"> <data type="NCName"/> </attribute>
                            </element>
                        </oneOrMore>
                    </element>
                </choice>
            </zeroOrMore>
        </element>
    </define>

    <define name="importance-factors">
        <attribute name="occurrence"> <data type="nonNegativeInteger"/> </attribute>
        <attribute name="probability"> <data type="double"/> </attribute>
        <attribute name="DIF"> <data type="double"/> </attribute>
        <attribute name="MIF"> <data type="double"/> </attribute>
        <attribute name="CIF"> <data type="double"/> </attribute>
        <attribute name="RRW"> <data type="double"/> </attribute>
        <attribute name="RAW"> <data type="double"/> </attribute>
    </define>

    <!-- ============================================================= -->
    <!-- II.5. Safety Integrity Levels -->
    <!-- ============================================================= -->

    <define name="safety-integrity-levels">
        <element name="safety-integrity-levels">
            <ref name="analysis-id"/>
            <attribute name="PFD-avg"> <ref name="probability-data"/> </attribute>
            <attribute name="PFH-avg"> <ref name="probability-data"/> </attribute>
            <ref name="histogram"/>  <!-- Implicit PFD histogram -->
            <ref name="histogram"/>  <!-- Implicit PFH histogram -->
        </element>
    </define>

    <!-- ============================================================= -->
    <!-- II.6. Initiating events and Sequences -->
    <!-- ============================================================= -->

    <define name="initiating-event">
        <element name="initiating-event">
            <attribute name="name"> <data type="NCName"/> </attribute>
            <optional>
                <group>
                    <attribute name="alignment"> <data type="NCName"/> </attribute>
                    <attribute name="phase"> <data type="NCName"/> </attribute>
                </group>
            </optional>
            <optional>
                <attribute name="description"> <text/> </attribute>
            </optional>
            <optional>
                <attribute name="warning"> <text/> </attribute>
            </optional>
            <attribute name="sequences">
                <data type="nonNegativeInteger"/>
            </attribute>
            <oneOrMore>
                <element name="sequence">
                    <attribute name="name"> <data type="NCName"/> </attribute>
                    <attribute name="value"> <ref name="probability-data"/> </attribute>
                </element>
            </oneOrMore>
        </element>
    </define>

</grammar>
