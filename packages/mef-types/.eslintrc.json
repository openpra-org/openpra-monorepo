{
  "extends": ["../../.eslintrc.json"],
  "ignorePatterns": ["!**/*"],
  "parserOptions": {
    "project": [
      "packages/mef-types/tsconfig.eslint.json"
    ]
  },
  "overrides": [
    {
      "files": ["**/*.d.ts"],
      "extends": ["plugin:@typescript-eslint/disable-type-checked"],
      "rules": {}
    },
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parserOptions": {
        "project": [
          "packages/mef-types/tsconfig.eslint.json"
        ]
      },
      "rules": {
        "@typescript-eslint/consistent-type-assertions": "off"
      }
    },
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parserOptions": {
        "project": [
          "packages/mef-types/tsconfig.eslint.json"
        ]
      },
      "rules": {
        "@typescript-eslint/no-redundant-type-constituents": "off",
        "@typescript-eslint/ban-types": [
          "warn",
          {
            "extendDefaults": true
          }
        ],
        "@typescript-eslint/prefer-nullish-coalescing": [
          "error",
          {
            "ignoreConditionalTests": true,
            "ignoreMixedLogicalExpressions": true,
            "ignorePrimitives": { "string": true, "number": true, "boolean": true }
          }
        ],
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-empty-function": "error",
        "no-empty": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/restrict-template-expressions": "warn",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/no-duplicate-type-constituents": "warn",
        "@typescript-eslint/no-unsafe-call": "warn",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        "@typescript-eslint/no-unsafe-member-access": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/no-confusing-void-expression": "warn",
        "@typescript-eslint/no-unsafe-enum-comparison": "warn",
        "@typescript-eslint/no-unnecessary-template-expression": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn"
      }
    },
    {
      "files": ["**/*.js", "**/*.jsx"],
      "rules": {}
    },
    {
      "files": ["*.json"],
      "parser": "jsonc-eslint-parser",
      "rules": {
        "@nx/dependency-checks": "error"
      }
    }
  ]
}
