import { EuiDataGridColumn } from "@elastic/eui";

// export interface OperatingState {
//   id?: number; // Assuming the ID is generated by the database and is optional when creating a new state
//   definition: string;
//   characteristics: string;
//   processCriteriaIdentification: string;
//   controlRodInsertion: string;
//   feedwaterPump: string;
//   reactorCoolantCirculator: string;
//   others: string;
// }

// // You can extend this interface to include additional properties as needed.
export interface DropdownOption {
  number: number;
  description: string;
}

export interface Column {
  id: string;
  name: string;
  type: string; // Could be more specific, like 'text' | 'dropdown' | 'number'
  dropdownOptions: DropdownOption[];
}

export interface Row {
  id: number;
  row_data: { [key: string]: string }; // row_data as an object
}
type ColumnType = "text" | "dropdown" | "number";

export interface CustomColumn extends EuiDataGridColumn {
  id: string;
  displayAsText: string;
  inputType?: ColumnType;
  dropdownOptions?: Array<{ value: string; text: string }>;
  // previousType?: ColumnType; // Add this line to include the previousType property

  // display?: React.ReactNode | ((props: CustomHeaderProps) => React.ReactNode);
}
export interface OperatingState {
  id: number;
  columns?: Column[]; // This should be optional since your response sometimes does not contain columns
  rows?: Row[]; // This should be optional since your response sometimes does not contain rows
  definition?: string;
  characteristics?: string;
  processCriteriaIdentification?: string;
  controlRodInsertion?: string;
  feedwaterPump?: string;
  reactorCoolantCirculator?: string;
  others?: string;
  // Include any other fields that might come from your backend
}
